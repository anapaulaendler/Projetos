// <auto-generated />
using System;
using ArcheologicalSite.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArcheologicalSite.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241209160350_Talvez")]
    partial class Talvez
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ArcheologicalSite.Models.Archeologist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("BirthDate");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("CPF");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Profession");

                    b.Property<int>("ProfessionalRegisterId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ProfessionalRegisterId");

                    b.HasKey("Id");

                    b.ToTable("Archeologists", (string)null);
                });

            modelBuilder.Entity("ArcheologicalSite.Models.Artefact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ArcheologistId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Dimension")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Dimension");

                    b.Property<string>("Function")
                        .HasColumnType("TEXT")
                        .HasColumnName("Function");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Material");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Origin");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Period");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.HasIndex("ArcheologistId");

                    b.ToTable("Artefacts", (string)null);
                });

            modelBuilder.Entity("ArcheologicalSite.Models.Fossil", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Condition")
                        .HasColumnType("TEXT")
                        .HasColumnName("Condition");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Origin");

                    b.Property<Guid?>("PaleontologistId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Period");

                    b.Property<string>("ScientificName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ScientificName");

                    b.Property<string>("Species")
                        .HasColumnType("TEXT")
                        .HasColumnName("Species");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.HasIndex("PaleontologistId");

                    b.ToTable("Fossils", (string)null);
                });

            modelBuilder.Entity("ArcheologicalSite.Models.Paleontologist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("BirthDate");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT")
                        .HasColumnName("CPF");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Profession");

                    b.Property<int>("ProfessionalRegisterId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ProfessionalRegisterId");

                    b.HasKey("Id");

                    b.ToTable("Paleontologists", (string)null);
                });

            modelBuilder.Entity("ArcheologicalSite.Models.Artefact", b =>
                {
                    b.HasOne("ArcheologicalSite.Models.Archeologist", "Archeologist")
                        .WithMany("Artefacts")
                        .HasForeignKey("ArcheologistId");

                    b.Navigation("Archeologist");
                });

            modelBuilder.Entity("ArcheologicalSite.Models.Fossil", b =>
                {
                    b.HasOne("ArcheologicalSite.Models.Paleontologist", "Paleontologist")
                        .WithMany("Fossils")
                        .HasForeignKey("PaleontologistId");

                    b.Navigation("Paleontologist");
                });

            modelBuilder.Entity("ArcheologicalSite.Models.Archeologist", b =>
                {
                    b.Navigation("Artefacts");
                });

            modelBuilder.Entity("ArcheologicalSite.Models.Paleontologist", b =>
                {
                    b.Navigation("Fossils");
                });
#pragma warning restore 612, 618
        }
    }
}
